include ../../header

html
    head
        meta(property='og:title'       content='TUTORIAL')
        meta(property='og:description' content='Examples and Definitions')
        meta(property='og:url'         content='https://laurent.groupoid.space/mathematics/tutorial/')

block title
    title TUTORIAL

block content
    nav
        <a href='../../index.html'>LAURENT</a>
        <a href='../announcement/index.html'>AD</a>
        <a href='#'>TUTOR</a>
    article.main
        .exe
            section
                h1 TUTORIAL
                span.
        aside
            time Published: 21 MAR 2025
        .exe
            section
                +tex.
                    This tutorial demonstrates core primitives with examples, annotated with
                    mathematical equivalents and theorems from the system.

                h2 Basic Constructs
                +code.
                    let universal : exp = Power Prop
                +tex.
                    Defines the power set of propositions, $\mathcal{P}(\text{Prop})$, a higher type in $U_1$.

                +code.
                    let set_a : exp =
                      Set (Lam ("x", Real,
                        RealIneq (Gt, Var "x", Zero)))
                +tex.
                    Represents the set of positive reals, $\{ x : \mathbb{R} \mid x > 0 \}$.

                +code.
                    let sup_a : exp = Sup set_a
                +tex.
                    Computes the supremum, $\sup \{ x > 0 \} = +\infty$, as the set is unbounded above.

                +code.
                    let inf_a : exp = Inf set_a
                +tex.
                    Computes the infimum, $\inf \{ x > 0 \} = 0$, the greatest lower bound.

                h2 Intervals and Measures
                +code.
                    let interval_a_b (a : exp) (b : exp) : exp =
                      Set (Lam ("x", Real,
                        And (RealIneq (Lte, a, Var "x"),
                             RealIneq (Lte, Var "x", b))))
                +tex.
                    Defines the closed interval $[a, b] = \{ x \mid a \leq x \leq b \}$.

                +code.
                    let lebesgue_measure (a : exp) (b : exp) : exp =
                      Mu (Real, Power (Set Real),
                        Lam ("A", Set Real,
                          If (RealIneq (Lte, a, b),
                              RealOps (Minus, b, a),
                              Infinity)))
                +tex.
                    Constructs the Lebesgue measure: $\mu(A) = b - a$ for $A = [a, b]$, $\infty$ otherwise.

                h2 Integration
                +code.
                    let integral_term : exp =
                      Lam ("f", Forall ("x", Real, Real),
                        Lam ("a", Real, Lam ("b", Real,
                          Lebesgue (Var "f",
                            Mu (Real, Power (Set Real),
                              Lam ("A", Set Real,
                                If (And (RealIneq (Lte, Var "a", Var "b"),
                                SetEq (Var "A", interval_a_b (Var "a") (Var "b"))),
                            RealOps (Minus, Var "b", Var "a"), Zero))),
                            interval_a_b (Var "a") (Var "b")))))
                +tex.
                    Defines the Lebesgue integral $\int_{[a,b]} f \, d\mu$, with $\mu([a, b]) = b - a$.

                +code.
                    let integral_sig : exp =
                      Forall ("f", Forall ("x", Real, Real),
                        Forall ("a", Real, Forall ("b", Real, Real)))
                +tex.
                    Type signature for the integral: $f : \mathbb{R} \to \mathbb{R} \to a, b : \mathbb{R} \to \mathbb{R}$.

                +code.
                    let l2_space : exp =
                      Lam ("f", Forall ("x", Real, Real),
                        RealIneq (Lt, Lebesgue (Lam ("x", Real,
                          RealOps (Pow, RealOps (Abs, App (Var "f", Var "x"), Zero),
                          RealOps (Plus, One, One))),
                          lebesgue_measure Zero Infinity,
                          interval_a_b Zero Infinity), Infinity))
                +tex.
                    Defines the $L^2$ space: $\int_0^\infty |f(x)|^2$, $d\mu < \infty$.

                h2 Sequences and Limits
                +code.
                    let sequence_a : exp =
                        Lam ("n", Nat, RealOps (Div, One, NatToReal (Var "n")))
                +tex.
                    Sequence $a_n = \frac{1}{n}$, converging to 0.

                +code.
                    let limit_a : exp =
                      Limit (Seq sequence_a, Infinity, Zero,
                        Lam ("ε", Real, Lam ("p", RealIneq (Gt, Var "ε", Zero),
                          Pair (RealOps (Div, One, Var "ε"),
                            Lam ("n", Nat, Lam ("q", RealIneq (Gt, Var "n", Var "N"),
                              RealIneq (Lt, RealOps (Abs,
                              RealOps (Minus, App (sequence_a, Var "n"), Zero), Zero),
                                Var "ε")))))))
                +tex.
                    Proves $\lim_{n \to \infty} \frac{1}{n} = 0$:
                    $\forall \varepsilon > 0$, $\exists N = \frac{1}{\varepsilon}$, $\forall n > N$, $|\frac{1}{n}| < \varepsilon$.

                +code.
                    let sequence_e : exp =
                      Lam ("n", Nat,
                        RealOps (Pow,
                          RealOps (Plus, One,
                            RealOps (Div, One, NatToReal (Var "n"))),
                            NatToReal (Var "n")))
                +tex.
                    Sequence for $e: e_n = (1 + \frac{1}{n})^n$.

                +code.
                    let e : exp =
                      Fst (Pair (RealOps (Exp, One, One),
                        Limit (Seq sequence_e, Infinity,
                          RealOps (Exp, One, One), ...)))
                +tex.
                    Defines $e = \exp(1)$, with limit proof truncated for brevity.

                h2 Testing and Verification
                +code.
                    let test_set_eq : exp =
                      Forall ("x", Real, iff_intro (Lam ("x",
                        RealIneq (Lte, Var "x", One), ...
                +tex.
                    Verifies set equality: $\{ x \mid x \leq 1 \} = \{ x \mid x < 1 \lor x = 1 \}$.

                +tex.
                    Runs type and term tests, ensuring correctness (e.g.,
                    $\lim_{n \to \infty} \frac{1}{n} : \text{Prop})$.

                +tex(true).
                    <br>
                    $$
                       \int
                    $$
                    <br><br>

include ../../footer
